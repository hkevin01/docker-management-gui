name: E2E (Playwright)

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 8
          run_install: false

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Build server and web
        run: |
          pnpm --filter @docker-gui/shared-types build || true
          pnpm --filter @docker-gui/server build
          pnpm --filter @docker-gui/web build

      - name: Build and start stack (compose)
        run: |
          docker compose build --no-cache
          docker compose up -d

      - name: Wait for server health
        run: |
          for i in {1..30}; do
            if curl -fsS http://localhost:3001/api/health >/dev/null; then
              echo "Server is healthy"; exit 0; fi; sleep 2; done; exit 1

      - name: Install Playwright Browsers
        working-directory: apps/web
        run: |
          pnpm exec playwright install --with-deps

      - name: Run Playwright tests
        working-directory: apps/web
        env:
          E2E_BASE_URL: http://localhost:8080
        run: pnpm run test:e2e

      - name: Upload Playwright report
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: apps/web/playwright-report

      - name: Dump server logs
        if: ${{ always() }}
        run: |
          docker logs docker-gui-server || true
          docker logs docker-gui-web || true

      - name: Teardown
        if: ${{ always() }}
        run: docker compose down -v
